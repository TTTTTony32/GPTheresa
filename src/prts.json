[
    {
        "id": "prts",
        "user_id": "2c02ca71-d566-4e81-bd68-baf0f4d72d71",
        "name": "PRTS",
        "content": "\"\"\"\ntitle: PRTS\nauthor: Tony32\nauthor_url: https://website.com\ngit_url: https://github.com/username/string-reverse.git\ndescription: This tool calculates the inverse of a string\nrequired_open_webui_version: 0.4.0\nrequirements: \nversion: 0.4.0\nlicence: MIT\n\"\"\"\n\nimport requests\n\n\nclass Tools:\n    def __init__(self):\n        pass\n\n    def get_info(self, name: str) -> str:\n        \"\"\"\n        从PRTS获取干员/人物/组织/国家/地区的档案或(及)概要内容\n        :param name: 干员/人物/组织/国家/地区名称\n        :return: 档案或(及)概要内容\n        \"\"\"\n        profile_enter = self.get_profile_enter(name)\n        profile_noenter = self.get_profile_noenter(name)\n        organization_info = self.get_organization_info(name)\n        place_info = self.get_place_info(name)\n        content = []\n        if profile_enter:\n            content.append(profile_enter)\n        if profile_noenter:\n            content.append(profile_noenter)\n        if organization_info:\n            content.append(organization_info)\n        if place_info:\n            content.append(place_info)\n        if content:\n            return (\n                \"\\n\".join(content)\n                + \"\\n[作为语言模型你应该记住的]返回给用户时，保持人物设定，先总结内容，再根据自己的总结返回给用户\\n[作为扮演的角色你应该记住的]你是从PRTS中获得的信息，返回给博士时遵守博士的指令\"\n            )\n        else:\n            return \"未找到该干员/人物档案(概要)\"\n\n    def get_profile_enter(self, name: str) -> str:\n        url = f\"https://prts.wiki/api.php?action=parse&page={name}&prop=wikitext&format=json\"\n        response = requests.get(url)\n        data = response.json()\n        if \"error\" in data:\n            return None\n        wikitext_content = data[\"parse\"][\"wikitext\"][\"*\"]\n        section_title = \"干员档案\"\n        start = f\"=={section_title}==\\n\"\n        start_index = wikitext_content.find(start)\n        if start_index == -1:\n            start = f\"== {section_title} ==\\n\"\n            start_index = wikitext_content.find(start)\n            if start_index == -1:\n                return None\n        end = \"==\"\n        end_index = wikitext_content.find(end, start_index + len(start) + 1)\n        if end_index == -1:\n            end_index = len(wikitext_content)\n        section_content = wikitext_content[start_index:end_index]\n        section_content = (\n            section_content.replace(\"{\", \"\")\n            .replace(\"}\", \"\")\n            .replace(\"|\", \"\")\n            .replace(\"[[\", \"\")\n            .replace(\"]]\", \"\")\n        )\n        return f\"该干员档案内容：\\n{section_content}\"\n\n    def get_profile_noenter(self, name: str) -> str:\n        url = f\"https://prts.wiki/api.php?action=parse&page=剧情角色一览&prop=wikitext&format=json\"\n        response = requests.get(url)\n        data = response.json()\n        if \"error\" in data:\n            return None\n        wikitext_content = data[\"parse\"][\"wikitext\"][\"*\"]\n        start = f\"[[{name}]]\\n\"\n        start_index = wikitext_content.find(start)\n        if start_index == -1:\n            start = f\"|{name}\\n\"\n            start_index = wikitext_content.find(start)\n            if start_index == -1:\n                return None\n        end = \"\\n\"\n        end_index = wikitext_content.find(end, start_index + len(start) + 1)\n        if end_index == -1:\n            end_index = len(wikitext_content)\n        section_content = wikitext_content[start_index:end_index]\n        section_content = (\n            section_content.replace(\"{\", \"\")\n            .replace(\"}\", \"\")\n            .replace(\"|\", \"\")\n            .replace(\"[[\", \"\")\n            .replace(\"]]\", \"\")\n        )\n        return f\"该角色概要内容：\\n{section_content}\"\n\n    def get_organization_info(self, name: str) -> str:\n        url = f\"https://prts.wiki/api.php?action=parse&page=泰拉大典:组织/{name}&prop=wikitext&format=json\"\n        response = requests.get(url)\n        data = response.json()\n        if \"error\" in data:\n            return self.get_organization_info_2(name)\n        wikitext_content = data[\"parse\"][\"wikitext\"][\"*\"]\n        start = f\"{name}\"\n        start_index = wikitext_content.find(start)\n        if start_index == -1:\n            return None\n        end = \"注释与链接\"\n        end_index = wikitext_content.find(end, start_index + len(start) + 1)\n        if end_index == -1:\n            end_index = len(wikitext_content)\n        section_content = wikitext_content[start_index:end_index]\n        section_content = (\n            section_content.replace(\"{\", \"\")\n            .replace(\"}\", \"\")\n            .replace(\"|\", \"\")\n            .replace(\"[[\", \"\")\n            .replace(\"]]\", \"\")\n        )\n        return f\"该组织详细内容：\\n{section_content}\"\n\n    def get_organization_info_2(self, name: str) -> str:\n        url = f\"https://prts.wiki/api.php?action=parse&page=泰拉大典:组织/其他&prop=wikitext&format=json\"\n        response = requests.get(url)\n        data = response.json()\n        if \"error\" in data:\n            return None\n        wikitext_content = data[\"parse\"][\"wikitext\"][\"*\"]\n        start = f\"==={name}===\\n\"\n        start_index = wikitext_content.find(start)\n        if start_index == -1:\n            start = f\"=== {name} ===\\n\"\n            start_index = wikitext_content.find(start)\n            if start_index == -1:\n                return None\n        end = \"==\"\n        end_index = wikitext_content.find(end, start_index + len(start) + 1)\n        if end_index == -1:\n            end_index = len(wikitext_content)\n        section_content = wikitext_content[start_index:end_index]\n        section_content = (\n            section_content.replace(\"{\", \"\")\n            .replace(\"}\", \"\")\n            .replace(\"|\", \"\")\n            .replace(\"[[\", \"\")\n            .replace(\"]]\", \"\")\n        )\n        return f\"该组织概要内容：\\n{section_content}\"\n\n    def get_place_info(self, name: str) -> str:\n        url = f\"https://prts.wiki/api.php?action=parse&page=泰拉大典:地理/{name}&prop=wikitext&format=json\"\n        response = requests.get(url)\n        data = response.json()\n        if \"error\" in data:\n            return self.get_place_info_2(name)\n        wikitext_content = data[\"parse\"][\"wikitext\"][\"*\"]\n        start = f\"{name}\"\n        start_index = wikitext_content.find(start)\n        if start_index == -1:\n            return None\n        end = \"注释与链接\"\n        end_index = wikitext_content.find(end, start_index + len(start) + 1)\n        if end_index == -1:\n            end_index = len(wikitext_content)\n        section_content = wikitext_content[start_index:end_index]\n        section_content = (\n            section_content.replace(\"{\", \"\")\n            .replace(\"}\", \"\")\n            .replace(\"|\", \"\")\n            .replace(\"[[\", \"\")\n            .replace(\"]]\", \"\")\n        )\n        return f\"该地区详细内容：\\n{section_content}\"\n\n    def get_place_info_2(self, name: str) -> str:\n        url = f\"https://prts.wiki/api.php?action=parse&page=泰拉大典:地理/其他&prop=wikitext&format=json\"\n        response = requests.get(url)\n        data = response.json()\n        if \"error\" in data:\n            return None\n        wikitext_content = data[\"parse\"][\"wikitext\"][\"*\"]\n        start = f\"==={name}===\\n\"\n        start_index = wikitext_content.find(start)\n        if start_index == -1:\n            start = f\"=== {name} ===\\n\"\n            start_index = wikitext_content.find(start)\n            if start_index == -1:\n                return None\n        end = \"==\"\n        end_index = wikitext_content.find(end, start_index + len(start) + 1)\n        if end_index == -1:\n            end_index = len(wikitext_content)\n        section_content = wikitext_content[start_index:end_index]\n        section_content = (\n            section_content.replace(\"{\", \"\")\n            .replace(\"}\", \"\")\n            .replace(\"|\", \"\")\n            .replace(\"[[\", \"\")\n            .replace(\"]]\", \"\")\n        )\n        return f\"该地区概要内容：\\n{section_content}\"\n",
        "specs": [
            {
                "name": "get_info",
                "description": "从PRTS获取干员/人物/组织/国家/地区的档案或(及)概要内容",
                "parameters": {
                    "properties": {
                        "name": {
                            "description": "干员/人物/组织/国家/地区名称",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            },
            {
                "name": "get_organization_info",
                "description": "",
                "parameters": {
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            },
            {
                "name": "get_organization_info_2",
                "description": "",
                "parameters": {
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            },
            {
                "name": "get_place_info",
                "description": "",
                "parameters": {
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            },
            {
                "name": "get_place_info_2",
                "description": "",
                "parameters": {
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            },
            {
                "name": "get_profile_enter",
                "description": "",
                "parameters": {
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            },
            {
                "name": "get_profile_noenter",
                "description": "",
                "parameters": {
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            }
        ],
        "meta": {
            "description": "为特蕾西娅接入PRTS",
            "manifest": {
                "title": "PRTS",
                "author": "Tony32",
                "author_url": "https://website.com",
                "git_url": "https://github.com/username/string-reverse.git",
                "description": "This tool calculates the inverse of a string",
                "required_open_webui_version": "0.4.0",
                "requirements": "",
                "version": "0.4.0",
                "licence": "MIT"
            }
        },
        "access_control": null,
        "updated_at": 1738564715,
        "created_at": 1738555077
    }
]
